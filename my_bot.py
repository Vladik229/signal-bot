from telethon import TelegramClient, events
from datetime import datetime
import asyncio

# –î–∞–Ω—ñ Telegram API (–æ—Ç—Ä–∏–º–∞–Ω—ñ –Ω–∞ my.telegram.org)
api_id = 22324300
api_hash = "cf6c90f7c5140c6494e37f00dcb6dbd6"

# –¢–≤—ñ–π ID –∞–∫–∞—É–Ω—Ç–∞ (–π–æ–º—É –±—É–¥—É—Ç—å –Ω–∞–¥—Å–∏–ª–∞—Ç–∏—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)
your_user_id = 1574352010

# –Ü–º'—è —Å–µ—Å—ñ—ó ‚Äî —Å—Ç–≤–æ—Ä–∏—Ç—å—Å—è —Ñ–∞–π–ª my_desktop_session.session
session_path = "my_desktop_session"

# ID –∫–∞–Ω–∞–ª—ñ–≤, —è–∫—ñ —Å–ª—É—Ö–∞—î–º–æ
channel_ids = [-1838832012, -1732065792, -2488924018, -1861059770]

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞
client = TelegramClient(session_path, api_id, api_hash)

@client.on(events.NewMessage(chats=channel_ids))
async def handler(event):
    try:
        message = event.message.message
        sender = await event.get_chat()
        channel_name = sender.title if sender else "Unknown"
        timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")

        print(f"\nüì° –°–∏–≥–Ω–∞–ª —ñ–∑: {channel_name}")
        print(f"üïí {timestamp}")
        print(f"üì® {message}\n")

        await client.send_message(
            your_user_id,
            f"üì° {channel_name} | {timestamp}\n\n{message}"
        )
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±–Ω–∏–∫—É: {e}")

async def main():
    print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram...")
    await client.connect()

    if not await client.is_user_authorized():
        print("‚ùå –ö–ª—ñ—î–Ω—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π. –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç –ª–æ–∫–∞–ª—å–Ω–æ —ñ –≤–≤–µ–¥–∏ –∫–æ–¥, —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–µ—Å—ñ—é.")
        return

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π! –°–ª—É—Ö–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())